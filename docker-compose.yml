services:
  # Redis condiviso
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - internal

  # RabbitMQ condiviso
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - internal

  # API Gateway (esposto pubblicamente)
  api-gateway:
    image: api-gateway:latest
    build: ./api-gateway
    container_name: api-gateway
    restart: unless-stopped
    env_file: ./api-gateway/.env
    depends_on:
      - redis
      - rabbitmq
      - auth-service
      - catalog-service
      - order-service
      - payment-service
      - user-service
      - notification-service
      - analytics-service
    volumes:
      - ./api-gateway:/var/www/html
    ports:
      - "80:80"
    networks:
      - internal

  # Microservizi Laravel
  auth-service:
    build: ./auth-service
    container_name: auth-service
    restart: unless-stopped
    env_file: ./auth-service/.env
    depends_on:
      - mysql-auth-service
      - redis
      - rabbitmq
    volumes:
      - ./auth-service:/var/www/html
    ports:
      - "8001:80"
    networks:
      - internal

  catalog-service:
    build: ./catalog-service
    container_name: catalog-service
    restart: unless-stopped
    env_file: ./catalog-service/.env
    depends_on:
      - mysql-catalog-service
      - redis
      - rabbitmq
    volumes:
      - ./catalog-service:/var/www/html
    ports:
      - "8002:80"
    networks:
      - internal

  order-service:
    build: ./order-service
    container_name: order-service
    restart: unless-stopped
    env_file: ./order-service/.env
    depends_on:
      - mysql-order-service
      - redis
      - rabbitmq
    volumes:
      - ./order-service:/var/www/html
    ports:
      - "8003:80"
    networks:
      - internal

  payment-service:
    build: ./payment-service
    container_name: payment-service
    restart: unless-stopped
    env_file: ./payment-service/.env
    depends_on:
      - mysql-payment-service
      - redis
      - rabbitmq
    volumes:
      - ./payment-service:/var/www/html
    ports:
      - "8004:80"
    networks:
      - internal

  user-service:
    build: ./user-service
    container_name: user-service
    restart: unless-stopped
    env_file: ./user-service/.env
    depends_on:
      - mysql-user-service
      - redis
      - rabbitmq
    volumes:
      - ./user-service:/var/www/html
    ports:
      - "8005:80"
    networks:
      - internal

  notification-service:
    build: ./notification-service
    container_name: notification-service
    restart: unless-stopped
    env_file: ./notification-service/.env
    depends_on:
      - mysql-notification-service
      - redis
      - rabbitmq
    volumes:
      - ./notification-service:/var/www/html
    ports:
      - "8007:80"
    networks:
      - internal

  analytics-service:
    build: ./analytics-service
    container_name: analytics-service
    restart: unless-stopped
    env_file: ./analytics-service/.env
    depends_on:
      - mysql-analytics-service
      - redis
      - rabbitmq
    volumes:
      - ./analytics-service:/var/www/html
    ports:
      - "8006:80"
    networks:
      - internal

  # Database MySQL dedicati
  mysql-auth-service:
    image: mysql:8.0
    container_name: mysql-auth-service
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: auth_pass
    volumes:
      - mysql_auth_data:/var/lib/mysql
    networks:
      - internal

  mysql-catalog-service:
    image: mysql:8.0
    container_name: mysql-catalog-service
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: catalog_db
      MYSQL_USER: catalog_user
      MYSQL_PASSWORD: catalog_pass
    volumes:
      - mysql_catalog_data:/var/lib/mysql
    networks:
      - internal

  mysql-order-service:
    image: mysql:8.0
    container_name: mysql-order-service
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: order_db
      MYSQL_USER: order_user
      MYSQL_PASSWORD: order_pass
    volumes:
      - mysql_order_data:/var/lib/mysql
    networks:
      - internal

  mysql-payment-service:
    image: mysql:8.0
    container_name: mysql-payment-service
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: payment_db
      MYSQL_USER: payment_user
      MYSQL_PASSWORD: payment_pass
    volumes:
      - mysql_payment_data:/var/lib/mysql
    networks:
      - internal

  mysql-user-service:
    image: mysql:8.0
    container_name: mysql-user-service
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: user_db
      MYSQL_USER: user_user
      MYSQL_PASSWORD: user_pass
    volumes:
      - mysql_user_data:/var/lib/mysql
    networks:
      - internal

  mysql-notification-service:
    image: mysql:8.0
    container_name: mysql-notification-service
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: notification_db
      MYSQL_USER: notification_user
      MYSQL_PASSWORD: notification_pass
    volumes:
      - mysql_notification_data:/var/lib/mysql
    networks:
      - internal

  mysql-analytics-service:
    image: mysql:8.0
    container_name: mysql-analytics-service
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: analytics_db
      MYSQL_USER: analytics_user
      MYSQL_PASSWORD: analytics_pass
    volumes:
      - mysql_analytics_data:/var/lib/mysql
    networks:
      - internal

volumes:
  redis_data:
  rabbitmq_data:
  mysql_auth_data:
  mysql_catalog_data:
  mysql_order_data:
  mysql_payment_data:
  mysql_user_data:
  mysql_notification_data:
  mysql_analytics_data:

networks:
  internal:
    driver: bridge
